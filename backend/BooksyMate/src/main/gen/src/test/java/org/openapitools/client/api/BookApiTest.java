/*
 * Booksy Mate API
 * Open API documentation for Spring Security Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: halilkrkn000@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BookRequest;
import org.openapitools.client.model.BookResponse;
import java.io.File;
import org.openapitools.client.model.PageResponseBookResponse;
import org.openapitools.client.model.PageResponseBorrowedBookResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BookApi
 */
@Disabled
public class BookApiTest {

    private final BookApi api = new BookApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveReturnBorrowBookTest() throws ApiException {
        Integer bookId = null;
        Integer response = api.approveReturnBorrowBook(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void borrowBookTest() throws ApiException {
        Integer bookId = null;
        Integer response = api.borrowBook(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllBooksTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        PageResponseBookResponse response = api.findAllBooks(page, size);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllBooksByOwnerTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        PageResponseBookResponse response = api.findAllBooksByOwner(page, size);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllBorrowedBooksTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        PageResponseBorrowedBookResponse response = api.findAllBorrowedBooks(page, size);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllReturnedBooksTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        PageResponseBorrowedBookResponse response = api.findAllReturnedBooks(page, size);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findBookByIdTest() throws ApiException {
        Integer bookId = null;
        BookResponse response = api.findBookById(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void returnBorrowBookTest() throws ApiException {
        Integer bookId = null;
        Integer response = api.returnBorrowBook(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveBookTest() throws ApiException {
        BookRequest bookRequest = null;
        Integer response = api.saveBook(bookRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateArchivedStatusTest() throws ApiException {
        Integer bookId = null;
        Integer response = api.updateArchivedStatus(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateShareableStatusTest() throws ApiException {
        Integer bookId = null;
        Integer response = api.updateShareableStatus(bookId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadBookCoverPictureTest() throws ApiException {
        Integer bookId = null;
        File _file = null;
        Object response = api.uploadBookCoverPicture(bookId, _file);
        // TODO: test validations
    }

}
